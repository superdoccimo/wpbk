services:
  wordpress:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: wordpress
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
    volumes:
      - ./php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./wordpress:/var/www/html
      - ./logs/apache2:/var/log/apache2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  db:
    image: mysql:latest
    container_name: wordpress-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db_data:/var/lib/mysql

  wpsql:
    image: mysql:latest
    container_name: wpsql
    depends_on:
      - db
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./backup:/backup
    entrypoint: >
      /bin/bash -c '
      echo "Waiting for database connection..." &&
      while ! mysqladmin ping -h "$$MYSQL_HOST" -u "$$MYSQL_USER" -p"$$MYSQL_PASSWORD" --silent; do
        echo "Still waiting for database...";
        sleep 5;
      done &&
      echo "Database connection established" &&
      while ! mysql -h "$$MYSQL_HOST" -u "$$MYSQL_USER" -p"$$MYSQL_PASSWORD" "$$MYSQL_DATABASE" -e "SHOW TABLES;" | grep -q "wp_posts"; do
        echo "Waiting for WordPress tables to be created...";
        sleep 30;
      done &&
      echo "WordPress tables detected, starting backup routine..." &&
      while true; do
        echo "Starting backup..." &&
        current_time=$$(date +%Y%m%d_%H%M%S) &&
        backup_file=/backup/$$MYSQL_DATABASE_backup_$$current_time.sql &&
        if mysqldump -h "$$MYSQL_HOST" -u "$$MYSQL_USER" -p"$$MYSQL_PASSWORD" \
          --skip-lock-tables \
          --single-transaction \
          --quick \
          --add-drop-table \
          --extended-insert \
          "$$MYSQL_DATABASE" > "$$backup_file"; then
          echo "Backup completed successfully: $$backup_file" &&
          ls -l "$$backup_file"
        else
          echo "Backup failed!"
        fi &&
        echo "Sleeping for 24 hours..." &&
        sleep 86400;
      done'
    restart: unless-stopped

volumes:
  db_data: {}
  backup: {}
